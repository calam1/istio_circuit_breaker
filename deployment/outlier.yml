apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: pyserver
spec:
  hosts:
    - pyserver
  http:
  - route:
    - destination:
        host: pyserver
        subset: v1
      weight: 50
    - destination:
        host: pyserver
        subset: v2
      weight: 50
    # retries:
      # attempts: 3
      # perTryTimeout: 2s
      # retryOn: 5xx

---

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: pyserver
spec:
  host: pyserver
  subsets:
  - name: v1
    labels:
      version: v1
    trafficPolicy:
      loadBalancer:
        # simple: RANDOM
        simple: ROUND_ROBIN
      outlierDetection:
        baseEjectionTime: 3m
        consecutiveErrors: 1
        interval: 1s
        maxEjectionPercent: 100
  - name: v2
    labels:
      version: v2
    trafficPolicy:
      loadBalancer:
        # simple: RANDOM
        simple: ROUND_ROBIN
      outlierDetection:
        # don't send traffic for 3 minutes if errors exist
        baseEjectionTime: 3m
        # one error happens then eject it
        consecutiveErrors: 1
        # how often istio checks
        interval: 1s
        # 100% of bad containers can be evicted
        maxEjectionPercent: 100
